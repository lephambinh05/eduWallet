{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lepha\\\\Downloads\\\\eduWallet\\\\src\\\\context\\\\WalletContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletContext = /*#__PURE__*/createContext();\nexport const useWallet = () => {\n  _s();\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw new Error('useWallet must be used within a WalletProvider');\n  }\n  return context;\n};\n_s(useWallet, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const WalletProvider = ({\n  children\n}) => {\n  _s2();\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [chainId, setChainId] = useState(null);\n\n  // Polygon Mumbai Testnet configuration\n  const POLYGON_MUMBAI = {\n    chainId: '0x13881',\n    chainName: 'Polygon Mumbai Testnet',\n    nativeCurrency: {\n      name: 'MATIC',\n      symbol: 'MATIC',\n      decimals: 18\n    },\n    rpcUrls: ['https://rpc-mumbai.maticvigil.com/'],\n    blockExplorerUrls: ['https://mumbai.polygonscan.com/']\n  };\n  const connectWallet = async () => {\n    setIsLoading(true);\n    try {\n      if (!window.ethereum) {\n        toast.error('MetaMask không được cài đặt!');\n        return;\n      }\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const accounts = await provider.send('eth_requestAccounts', []);\n      const signer = provider.getSigner();\n      const network = await provider.getNetwork();\n      setProvider(provider);\n      setSigner(signer);\n      setAccount(accounts[0]);\n      setChainId(network.chainId);\n      setIsConnected(true);\n\n      // Check if we're on the correct network\n      if (network.chainId !== 80001) {\n        // Mumbai testnet\n        await switchToMumbai();\n      }\n      toast.success('Kết nối ví thành công!');\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n      toast.error('Lỗi kết nối ví: ' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const switchToMumbai = async () => {\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: POLYGON_MUMBAI.chainId\n        }]\n      });\n    } catch (switchError) {\n      // This error code indicates that the chain has not been added to MetaMask\n      if (switchError.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [POLYGON_MUMBAI]\n          });\n        } catch (addError) {\n          toast.error('Không thể thêm mạng Polygon Mumbai');\n        }\n      }\n    }\n  };\n  const disconnectWallet = () => {\n    setAccount(null);\n    setProvider(null);\n    setSigner(null);\n    setIsConnected(false);\n    setChainId(null);\n    toast.success('Đã ngắt kết nối ví');\n  };\n  const getAccountBalance = async () => {\n    if (!provider || !account) return '0';\n    try {\n      const balance = await provider.getBalance(account);\n      return ethers.utils.formatEther(balance);\n    } catch (error) {\n      console.error('Error getting balance:', error);\n      return '0';\n    }\n  };\n\n  // Listen for account changes\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', accounts => {\n        if (accounts.length === 0) {\n          disconnectWallet();\n        } else {\n          setAccount(accounts[0]);\n        }\n      });\n      window.ethereum.on('chainChanged', chainId => {\n        setChainId(parseInt(chainId, 16));\n        if (parseInt(chainId, 16) !== 80001) {\n          toast.error('Vui lòng chuyển sang mạng Polygon Mumbai');\n        }\n      });\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeAllListeners();\n      }\n    };\n  }, []);\n  const value = {\n    account,\n    provider,\n    signer,\n    isConnected,\n    isLoading,\n    chainId,\n    connectWallet,\n    disconnectWallet,\n    getAccountBalance,\n    switchToMumbai\n  };\n  return /*#__PURE__*/_jsxDEV(WalletContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s2(WalletProvider, \"HoNbEMnPKwhr5C/U/Zmdbmabd+g=\");\n_c = WalletProvider;\nvar _c;\n$RefreshReg$(_c, \"WalletProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","ethers","toast","jsxDEV","_jsxDEV","WalletContext","useWallet","_s","context","Error","WalletProvider","children","_s2","account","setAccount","provider","setProvider","signer","setSigner","isConnected","setIsConnected","isLoading","setIsLoading","chainId","setChainId","POLYGON_MUMBAI","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","connectWallet","window","ethereum","error","providers","Web3Provider","accounts","send","getSigner","network","getNetwork","switchToMumbai","success","console","message","request","method","params","switchError","code","addError","disconnectWallet","getAccountBalance","balance","getBalance","utils","formatEther","on","length","parseInt","removeAllListeners","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lepha/Downloads/eduWallet/src/context/WalletContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst WalletContext = createContext();\r\n\r\nexport const useWallet = () => {\r\n  const context = useContext(WalletContext);\r\n  if (!context) {\r\n    throw new Error('useWallet must be used within a WalletProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const WalletProvider = ({ children }) => {\r\n  const [account, setAccount] = useState(null);\r\n  const [provider, setProvider] = useState(null);\r\n  const [signer, setSigner] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [chainId, setChainId] = useState(null);\r\n\r\n  // Polygon Mumbai Testnet configuration\r\n  const POLYGON_MUMBAI = {\r\n    chainId: '0x13881',\r\n    chainName: 'Polygon Mumbai Testnet',\r\n    nativeCurrency: {\r\n      name: 'MATIC',\r\n      symbol: 'MATIC',\r\n      decimals: 18,\r\n    },\r\n    rpcUrls: ['https://rpc-mumbai.maticvigil.com/'],\r\n    blockExplorerUrls: ['https://mumbai.polygonscan.com/'],\r\n  };\r\n\r\n  const connectWallet = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      if (!window.ethereum) {\r\n        toast.error('MetaMask không được cài đặt!');\r\n        return;\r\n      }\r\n\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const accounts = await provider.send('eth_requestAccounts', []);\r\n      const signer = provider.getSigner();\r\n      const network = await provider.getNetwork();\r\n\r\n      setProvider(provider);\r\n      setSigner(signer);\r\n      setAccount(accounts[0]);\r\n      setChainId(network.chainId);\r\n      setIsConnected(true);\r\n\r\n      // Check if we're on the correct network\r\n      if (network.chainId !== 80001) { // Mumbai testnet\r\n        await switchToMumbai();\r\n      }\r\n\r\n      toast.success('Kết nối ví thành công!');\r\n    } catch (error) {\r\n      console.error('Error connecting wallet:', error);\r\n      toast.error('Lỗi kết nối ví: ' + error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const switchToMumbai = async () => {\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: POLYGON_MUMBAI.chainId }],\r\n      });\r\n    } catch (switchError) {\r\n      // This error code indicates that the chain has not been added to MetaMask\r\n      if (switchError.code === 4902) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [POLYGON_MUMBAI],\r\n          });\r\n        } catch (addError) {\r\n          toast.error('Không thể thêm mạng Polygon Mumbai');\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const disconnectWallet = () => {\r\n    setAccount(null);\r\n    setProvider(null);\r\n    setSigner(null);\r\n    setIsConnected(false);\r\n    setChainId(null);\r\n    toast.success('Đã ngắt kết nối ví');\r\n  };\r\n\r\n  const getAccountBalance = async () => {\r\n    if (!provider || !account) return '0';\r\n    try {\r\n      const balance = await provider.getBalance(account);\r\n      return ethers.utils.formatEther(balance);\r\n    } catch (error) {\r\n      console.error('Error getting balance:', error);\r\n      return '0';\r\n    }\r\n  };\r\n\r\n  // Listen for account changes\r\n  useEffect(() => {\r\n    if (window.ethereum) {\r\n      window.ethereum.on('accountsChanged', (accounts) => {\r\n        if (accounts.length === 0) {\r\n          disconnectWallet();\r\n        } else {\r\n          setAccount(accounts[0]);\r\n        }\r\n      });\r\n\r\n      window.ethereum.on('chainChanged', (chainId) => {\r\n        setChainId(parseInt(chainId, 16));\r\n        if (parseInt(chainId, 16) !== 80001) {\r\n          toast.error('Vui lòng chuyển sang mạng Polygon Mumbai');\r\n        }\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (window.ethereum) {\r\n        window.ethereum.removeAllListeners();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const value = {\r\n    account,\r\n    provider,\r\n    signer,\r\n    isConnected,\r\n    isLoading,\r\n    chainId,\r\n    connectWallet,\r\n    disconnectWallet,\r\n    getAccountBalance,\r\n    switchToMumbai,\r\n  };\r\n\r\n  return (\r\n    <WalletContext.Provider value={value}>\r\n      {children}\r\n    </WalletContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}